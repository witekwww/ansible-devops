---

# 1. Create Grafana Subscription
# -----------------------------------------------------------------------------
- name: "install : Create Grafana v5 Subscription"
  include_tasks: "{{ role_path }}/../../common_tasks/create_subscription.yml"
  vars:
    package_name: grafana-operator
    channel_name: v5
    subscription_namespace: "{{ grafana_v5_namespace }}"
    subscription_config:
      env:
        - name: "WATCH_NAMESPACE"
          value: ""
        - name: "DASHBOARD_NAMESPACES_ALL"
          value: "true"


# 2. Configure Grafana Operator so it can scan all namespaces for dashboards
# -------------------------------------------------------------------------------------
# See https://github.com/grafana-operator/grafana-operator/blob/master/documentation/multi_namespace_support.md
- name: "install : Apply Cluster Role and Role Binding"
  kubernetes.core.k8s:
    template: templates/grafana/v5/grafana-rbac.yml.j2
    wait: yes
    wait_timeout: 120


# 3. Configure Grafana Instance
# -------------------------------------------------------------------------------------
- name: "install : Create Grafana Instance"
  kubernetes.core.k8s:
    template: templates/grafana/v5/grafana.yml.j2
    wait: yes
    wait_timeout: 300


# 4. Configure Grafana Datasource
# -------------------------------------------------------------------------------------
# As per https://docs.openshift.com/container-platform/4.8/monitoring/enabling-monitoring-for-user-defined-projects.html#enabling-monitoring-for-user-defined-projects
# use the external thanos url

- name: Create prometheus-user-workload token
  shell: "oc create token prometheus-user-workload -n openshift-user-workload-monitoring"
  register: prometheus_token
  retries: 10
  delay: 30 # seconds
  until: prometheus_token.rc == 0

- name: "install : Get Thanos Querier route in openshift-monitoring namespace"
  kubernetes.core.k8s_info:
    api: v1
    kind: Route
    name: thanos-querier
    namespace: openshift-monitoring
  register: thanos_route

- name: "install : Fail if we didn't get the Thanos route"
  fail:
    msg: "The Thanos route `thanos-querier` or host within route not found in openshift-monitoring"
  when:
    thanos_route is not defined or
    thanos_route.resources[0].spec is not defined or
    thanos_route.resources[0].spec.host is not defined

- name: "install : Get Thanos Querier host from route"
  set_fact:
    thanos_host: "{{ thanos_route.resources[0].spec.host }}"

- name: "install : Create Grafana Datasource"
  kubernetes.core.k8s:
    template: templates/grafana/v5/grafana-datasource.yml.j2
    wait: yes
    wait_timeout: 120


# 4. Wait for Grafana to be ready
# -------------------------------------------------------------------------------------
- name: "install : Wait for grafana to be ready (60s delay)"
  kubernetes.core.k8s_info:
    api_version: grafana.integreatly.org/v1beta1
    name: mas-grafana
    namespace: "{{grafana_v5_namespace}}"
    kind: Grafana
  register: grafana_cr_result
  until:
    - grafana_cr_result.resources[0].status.stage is defined
    - grafana_cr_result.resources[0].status.stageStatus is defined
    - grafana_cr_result.resources[0].status.stage == "complete"
    - grafana_cr_result.resources[0].status.stageStatus == "success"
  retries: 10 # approx 50 minutes before we give up
  delay: 60 # 1 minute
